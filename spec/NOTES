Idea:

Expose max_current as a value that can by the user just as brightness can be set.
Use same conventions as brightness setting, e.g. max_max_current holds 7 and
max_current holds any value from 0 to 7)

From https://github.com/CyanogenMod/lge-kernel-mako/blob/jellybean/drivers/leds/leds-lm3530.c

    #define LM3530_MAX_CURR_SHIFT       (2)

    gen_config = (pdata->brt_ramp_law << LM3530_RAMP_LAW_SHIFT) |
                ((pdata->max_current & 7) << LM3530_MAX_CURR_SHIFT);

This will take any value from 0 to 7 and shift it 2 bits to the left,
writing to bits 2-4 of the general configuration register. These bits
hold the "Full Scale Current Select" value, which ranges from 0 to 7.

(insert general-config-register.png figure)

From https://github.com/torvalds/linux/blob/master/include/linux/led-lm3530.h 

    /**
     * struct lm3530_platform_data
     * @mode: mode of operation i.e. Manual, ALS or PWM
     * @als_input_mode: select source of ALS input - ALS1/2 or average
     * @max_current: full scale LED current
     * @pwm_pol_hi: PWM input polarity - active high/active low
     * @als_avrg_time: ALS input averaging time
     * @brt_ramp_law: brightness mapping mode - exponential/linear
     * @brt_ramp_fall: rate of fall of led current
     * @brt_ramp_rise: rate of rise of led current
     * @als1_resistor_sel: internal resistance from ALS1 input to ground
     * @als2_resistor_sel: internal resistance from ALS2 input to ground
     * @als_vmin: als input voltage calibrated for max brightness in mV
     * @als_vmax: als input voltage calibrated for min brightness in mV
     * @brt_val: brightness value (0-127)
     * @pwm_data: PWM control functions (only valid when the mode is PWM)
     */
    struct lm3530_platform_data {
        enum lm3530_mode mode;
        enum lm3530_als_mode als_input_mode;
    
        u8 max_current;
        bool pwm_pol_hi;
        u8 als_avrg_time;
    
        bool brt_ramp_law;
        u8 brt_ramp_fall;
        u8 brt_ramp_rise;
    
        u8 als1_resistor_sel;
        u8 als2_resistor_sel;
    
        u32 als_vmin;
        u32 als_vmax;
    
        u8 brt_val;
    
        struct lm3530_pwm_data pwm_data;
    };

From https://android.googlesource.com/kernel/msm/+/android-msm-mako-3.4-jb-mr1/arch/arm/mach-msm/lge/mako/board-mako-display.c

    #if defined (CONFIG_BACKLIGHT_LM3530)
    static struct backlight_platform_data lm3530_data = {
    
            .gpio = PM8921_GPIO_PM_TO_SYS(24),
    #ifdef CONFIG_LGIT_VIDEO_WXGA_CABC
            .max_current = 0x17 | PWM_BRIGHTNESS,
    #else
            .max_current = 0x17,
    #endif
            .min_brightness = 0x02,
            .max_brightness = 0x72,
            .default_brightness = 0x11,
            .blmap = NULL,
            .blmap_size = 0,
    };
    #endif
    
    static struct i2c_board_info msm_i2c_backlight_info[] = {
            {
    #if defined(CONFIG_BACKLIGHT_LM3530)
                    I2C_BOARD_INFO("lm3530", 0x38),
                    .platform_data = &lm3530_data,
    #endif
            }
    };
    
